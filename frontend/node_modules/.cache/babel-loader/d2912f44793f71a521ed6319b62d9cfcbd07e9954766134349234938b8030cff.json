{"ast":null,"code":"var _jsxFileName = \"/Users/school/Coding Projects/VSCode Projects/youtube-taste-similarity/frontend/src/components/Fields.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Fields.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fields = () => {\n  _s();\n  const [field1, setField1] = useState('');\n  const [field2, setField2] = useState('');\n  const [loading, setLoading] = useState(false); // New state for loading indicator\n  const [resultLabel, setResultLabel] = useState(null);\n  const handleButtonClick = () => {\n    setLoading(true); // Set loading state to true when the button is clicked\n\n    // Assuming your Django backend is running on http://localhost:8000\n    const apiUrl = 'http://localhost:8000/django_app/handle_frontend_data/';\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        field1,\n        field2\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Data sent successfully', data);\n    }).catch(error => {\n      console.error('Error sending data', error);\n      // Handle error, e.g., show an error message\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: field1,\n        onChange: e => setField1(e.target.value),\n        className: \"input\",\n        placeholder: \"Playlist 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: field2,\n        onChange: e => setField2(e.target.value),\n        className: \"input\",\n        placeholder: \"Playlist 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      className: \"button\",\n      children: \"Compare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), resultLabel && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Fields, \"AhJis87cWaQWe0z0wN8Ev4hlr7Q=\");\n_c = Fields;\nexport default Fields;\nvar _c;\n$RefreshReg$(_c, \"Fields\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fields","_s","field1","setField1","field2","setField2","loading","setLoading","resultLabel","setResultLabel","handleButtonClick","apiUrl","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","catch","error","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/school/Coding Projects/VSCode Projects/youtube-taste-similarity/frontend/src/components/Fields.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Fields.css';\n\nconst Fields = () => {\n  const [field1, setField1] = useState('');\n  const [field2, setField2] = useState('');\n  const [loading, setLoading] = useState(false); // New state for loading indicator\n  const [resultLabel, setResultLabel] = useState(null);\n\n  const handleButtonClick = () => {\n    setLoading(true); // Set loading state to true when the button is clicked\n    \n    // Assuming your Django backend is running on http://localhost:8000\n    const apiUrl = 'http://localhost:8000/django_app/handle_frontend_data/';\n\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        field1,\n        field2,\n      }),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Data sent successfully', data);\n\n      })\n      .catch(error => {\n        console.error('Error sending data', error);\n        // Handle error, e.g., show an error message\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={field1}\n          onChange={(e) => setField1(e.target.value)}\n          className=\"input\"\n          placeholder=\"Playlist 1\"\n        />\n        <input\n          type=\"text\"\n          value={field2}\n          onChange={(e) => setField2(e.target.value)}\n          className=\"input\"\n          placeholder=\"Playlist 2\"\n        />\n      </div>\n      <button onClick={handleButtonClick} className=\"button\">\n        Compare\n      </button>\n      {resultLabel && <p>{resultLabel}</p>}\n    </div>\n  );\n};\n\nexport default Fields;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}